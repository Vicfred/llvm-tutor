version: '1.0.{build}'

platform:
  - x64

install:
  # Download ninja
  - cmd: mkdir C:\ninja-build
  - ps: (new-object net.webclient).DownloadFile('https://github.com/mesonbuild/cidata/raw/master/ninja.exe', 'C:\ninja-build\ninja.exe')
  - cmd: set PATH=C:\ninja-build;%PATH%
  - cinst: archiver

clone_folder: c:\projects\llvm-tutor
image:
- Visual Studio 2017
 
configuration:
  - Release

environment:
  matrix:
  - arch: Win64
matrix:
  fast_finish: true

init:
- set arch=
- if "%arch%"=="Win64" ( set arch= Win64)
- echo %arch%
- echo %APPVEYOR_BUILD_WORKER_IMAGE%
- if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" ( set generator="Visual Studio 15 2017%arch%" )
- if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2015" ( set generator="Visual Studio 14 2015%arch%" )
- if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2013" ( set generator="Visual Studio 12 2013%arch%" )
- echo %generator%

before_build:
- ps: |
    mkdir C:\llvm-install
    $client = new-object System.Net.WebClient
    $client.DownloadFile('https://ziglang.org/deps/llvm%2bclang-8.0.0-win64-msvc-release.tar.xz', 'C:\llvm-install\llvm.tar.xz')
    cd C:\llvm-install\
    choco install archiver
    arc unarchive llvm.tar.xz C:\llvm-install\llvm
    dir llvm\llvm+clang-8.0.0-win64-msvc-release\
- cmd: |
    REM CMake scripts print some messages (via 'message'). Although not errors,
    REM these go to stderr, which PowerShell treats as exceptions. For this
    REM reason, run CMake in the command line.
    cd C:\projects\llvm-tutor
    mkdir build
    cd build
    echo %generator%
    cmake ../ -G "%generator%" -DLT_LLVM_INSTALL_DIR="C:\llvm-install\llvm\llvm+clang-8.0.0-win64-msvc-release"
    # cmake -build . -config Release

build:
  project: $(APPVEYOR_BUILD_FOLDER)\build\llvm-tutor.sln
  verbosity: minimal
  parallel: true
